//============================================================================//
//                                                                            //
//                         Copyright Â© 2015 Sandpolis                         //
//                                                                            //
//  This source file is subject to the terms of the Mozilla Public License    //
//  version 2. You may not use this file except in compliance with the MPL    //
//  as published by the Mozilla Foundation.                                   //
//                                                                            //
//============================================================================//
syntax = "proto3";

package plugin.filesystem;

option java_package = "com.sandpolis.plugin.filesystem";

message FsHandleOptions {

    // Indicates whether size should be included in listings
    bool size = 1;

    // Indicates whether creation timestamps should be included in listings
    bool ctime = 2;

    // Indicates whether modification timestamps should be included in listings
    bool mtime = 3;

    // Indicates whether access timestamps should be included in listings
    bool atime = 4;

    // Indicates whether MIME types should be included in listings
    bool mime = 5;

    // The file owner
    bool owner = 6;
}

/**
 * A FileListlet is a component of a directory listing.
 */
message FileListlet {

    // Indicates whether the file is a directory
    bool directory = 1;

    // The file's name
    string name = 2;

    // The file's creation time
    int64 ctime = 3;

    // The file's modification time
    int64 mtime = 4;

    // The file's access time
    int64 atime = 5;

    // The file's size in bytes or number of elements if directory
    int64 size = 6;

    // The file's MIME type
    string mime = 7;

    enum UpdateType {

        // Indicates an entry has been added
        ENTRY_CREATE = 0;

        // Indicates an entry has been removed
        ENTRY_DELETE = 1;

        // Indicates an entry has been modified
        ENTRY_MODIFY = 2;

        // Indicates some updates were dropped and the listing should be refreshed
        OVERFLOW = 3;
    }

    UpdateType update_type = 8;
}

/**
 * Updates to a directory listing.
 */
message EV_FileListing {

    int32 fmid = 1;

    // The directory's absolute path
    string path = 2;

    // Listing updates
    repeated FileListlet listing = 3;
}

/**
 * Request a directory listing.
 */
message RQ_FileListing {
    string path = 1;

    FsHandleOptions options = 2;
}

/**
 * Response to a directory listing request.
 */
message RS_FileListing {

    // The directory's absolute path
    string path = 1;

    // The directory listing
    repeated FileListlet listing = 2;
}

/**
 * Request for detailed file information.
 */
message RQ_FileInfo {

    // An absolute path
    string file = 1;
}

/**
 * Response to a file info request.
 */
message RS_FileInfo {

    // The file's icon on the local platform
    bytes local_icon = 1;

    // The file's location
    string path = 2;

    // The file's name
    string name = 3;

    // The file's creation time
    int64 ctime = 4;

    // The file's modification time
    int64 mtime = 5;

    // The file's access time
    int64 atime = 6;

    // The file's size in bytes or number of elements if directory
    int64 size = 7;

    // The file's MIME type
    string mime = 8;
}

/**
 * Request for one or more files to be deleted.
 */
message RQ_FileDelete {

    // A list of absolute paths to delete
    repeated string target = 1;
}

/**
 * Request to open a new filesystem handle.
 */
message RQ_FsHandle {
    FsHandleOptions options = 1;
}

/**
 * Response to a handle request.
 */
message RS_FsHandle {

    // The filesystem handle's ID
    int32 fmid = 1;
}

/**
 * Request to close the given handle.
 */
message RQ_CloseFsHandle {

    // The filesystem handle to close
    int32 fmid = 1;
}
